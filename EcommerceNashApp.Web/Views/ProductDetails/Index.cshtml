@using EcommerceNashApp.Web.Models.Views
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model ProductDetailsView
@{
    ViewData["Title"] = @Model.Product.Name;
    var userInfoJson = HttpContextAccessor.HttpContext!.Session.GetString("UserInfo");
    var userInfo = userInfoJson != null ? Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(userInfoJson) : null;
}

<!-- Header -->
<section class="py-5 bg-light">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang Chủ</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Product")">Sản Phẩm</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Product.Name</li>
            </ol>
        </nav>
    </div>
</section>

<!-- Product Details Section -->
<section class="py-5">
    <div class="container">
        <!-- Success/Error Messages -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row">
            <div class="col-lg-6 mb-4 mb-lg-0">
                <!-- Swipeable Image Gallery -->
                <div class="swiper product-image-swiper bg-white rounded shadow-sm">
                    <div class="swiper-wrapper">
                        @if (Model.Product.ProductImages.Any())
                        {
                            foreach (var image in Model.Product.ProductImages)
                            {
                                <div class="swiper-slide">
                                    <img src="@image.ImageUrl" alt="@Model.Product.Name" class="img-fluid w-100" style="height: 50vh; object-fit: cover;">
                                </div>
                            }
                        }
                        else
                        {
                            <div class="swiper-slide">
                                <img src="~/images/placeholder.jpg" alt="@Model.Product.Name" class="img-fluid w-100" style="height: 50vh; object-fit: cover;">
                            </div>
                        }
                    </div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
            <div class="col-lg-6">
                <!-- Product Details -->
                <div class="bg-white p-4 rounded shadow-sm">
                    <h2 class="fw-bold mb-3">@Model.Product.Name</h2>
                    <p class="text-muted mb-2">Mã sản phẩm: @Model.Product.Id</p>
                    <h3 class="fw-bold text-primary mb-3">$@Model.Product.Price.ToString("N2")</h3>
                    <p class="mb-3">Tồn kho: @Model.Product.StockQuantity</p>

                    <!-- Size Selection -->
                    <div class="mb-3">
                        <label for="size" class="form-label fw-bold">Kích thước:</label>
                        <select id="size" name="size" class="form-select">
                            <option value="S">S</option>
                            <option value="M">M</option>
                            <option value="L">L</option>
                            <option value="XL">XL</option>
                        </select>
                    </div>

                    <!-- Quantity Selection -->
                    <div class="mb-3">
                        <label for="quantity" class="form-label fw-bold">Số lượng:</label>
                        <div class="input-group w-50">
                            <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(-1)">-</button>
                            <input type="number" id="quantity" name="quantity" class="form-control text-center" value="1" min="1" max="@Model.Product.StockQuantity">
                            <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(1)">+</button>
                        </div>
                    </div>

                    <!-- Add to Cart Form -->
                    <form asp-action="AddToCart" asp-controller="Cart" method="post" class="mb-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="productId" value="@Model.Product.Id" />
                        <input type="hidden" name="quantity" id="cart-quantity" value="1" />
                        <input type="hidden" name="size" id="cart-size" value="S" />
                        @if (userInfo != null && userInfo.UserId != null)
                        {
                            <input type="hidden" name="userId" value="@userInfo.UserId" />
                        }
                        <button type="submit" class="btn btn-red hvr-sweep-to-right dark-sweep w-100 text-uppercase">Thêm vào giỏ hàng</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Description -->
        <div class="bg-white p-4 rounded shadow-sm mt-5">
            <h4 class="fw-bold mb-3">Mô tả sản phẩm</h4>
            <p>@Model.Product.Description</p>
        </div>

        <!-- Ratings -->
        <div class="bg-white p-4 rounded shadow-sm mt-4">
            <h4 class="fw-bold mb-3">Đánh giá (@Model.Ratings.Count)</h4>
            <div class="mb-3">
                <span class="fw-bold">Đánh giá trung bình: </span>
                @{
                    var rating = Math.Round(Model.Product.AverageRating * 2) / 2;
                    var fullStars = (int)Math.Floor(rating);
                    var halfStar = (rating % 1) >= 0.5 ? 1 : 0;
                    var emptyStars = 5 - fullStars - halfStar;
                    for (var i = 0; i < fullStars; i++)
                    {
                        <span style="color: gold;">★</span>
                    }
                    if (halfStar == 1)
                    {
                        <span style="color: gold;">★</span>
                    }
                    for (var i = 0; i < emptyStars; i++)
                    {
                        <span style="color: gray;">☆</span>
                    }
                }
                <span>(@Model.Product.AverageRating.ToString("N1") / 5)</span>
            </div>

            <!-- Rating Details -->
            @if (Model.Ratings.Any())
            {
                foreach (var userRating in Model.Ratings)
                {
                    <div class="border-bottom py-3">
                        <div class="d-flex justify-content-between mb-2">
                            <div>
                                @for (var i = 0; i < userRating.Value; i++)
                                {
                                    <span style="color: gold;">★</span>
                                }
                                @for (var i = userRating.Value; i < 5; i++)
                                {
                                    <span style="color: gray;">☆</span>
                                }
                            </div>
                            <small class="text-muted">@userRating.CreatedDate.ToString("dd/MM/yyyy")</small>
                        </div>
                        <p class="mb-1"><strong>@userRating.Username</strong></p>
                        <p>@userRating.Comment</p>
                    </div>
                }
            }
            else
            {
                <p>Chưa có đánh giá nào cho sản phẩm này.</p>
            }

            <!-- Rating Form (Logged-in Users Only) -->
            @if (userInfo != null && userInfo.UserId != null)
            {
                <div class="mt-4">
                    @if (Model.UserRating != null)
                    {
                        <!-- Update/Delete Rating Form -->
                        <h5 class="fw-bold mb-3">Đánh giá của bạn</h5>
                        <form asp-action="UpdateRating" asp-controller="ProductDetails" method="post" class="update-rating-form">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="productId" value="@Model.Product.Id" />
                            <input type="hidden" name="ratingId" value="@Model.UserRating.Id" />
                            <input type="hidden" name="userId" value="@userInfo.UserId" />
                            <div class="mb-3">
                                <label class="form-label fw-bold">Đánh giá:</label>
                                <div class="star-rating">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <input type="radio" name="rating" id="update-star-@i" value="@i" required @(Model.UserRating.Value == i ? "checked" : "")>
                                        <label for="update-star-@i" style="font-size: 1.5rem; cursor: pointer;">★</label>
                                    }
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="update-comment" class="form-label fw-bold">Bình luận:</label>
                                <textarea name="comment" id="update-comment" class="form-control" rows="4" required>@Model.UserRating.Comment</textarea>
                            </div>
                            <button type="submit" class="btn btn-red hvr-sweep-to-right dark-sweep me-2">Cập nhật đánh giá</button>
                        </form>
                        <!-- Delete Rating Form -->
                        <div class="mt-4"></div>
                        <form asp-action="DeleteRating" asp-controller="ProductDetails" method="post" style="display: inline;">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="productId" value="@Model.Product.Id" />
                            <input type="hidden" name="ratingId" value="@Model.UserRating.Id" />
                            <input type="hidden" name="userId" value="@userInfo.UserId" />
                            <button type="submit" class="btn btn-outline-gray hvr-sweep-to-right" onclick="return confirm('Bạn có chắc muốn xóa đánh giá này?');">Xóa đánh giá</button>
                        </form>
                    }
                    else
                    {
                        <!-- Add Rating Form -->
                        <h5 class="fw-bold mb-3">Thêm đánh giá của bạn</h5>
                        <form asp-action="AddRating" asp-controller="ProductDetails" method="post" class="add-rating-form">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="productId" value="@Model.Product.Id" />
                            <input type="hidden" name="userId" value="@userInfo.UserId" />
                            <div class="mb-3">
                                <label class="form-label fw-bold">Đánh giá:</label>
                                <div class="star-rating">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <input type="radio" name="rating" id="add-star-@i" value="@i" required>
                                        <label for="add-star-@i" style="font-size: 1.5rem; cursor: pointer;">★</label>
                                    }
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="add-comment" class="form-label fw-bold">Bình luận:</label>
                                <textarea name="comment" id="add-comment" class="form-control" rows="4" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-red hvr-sweep-to-right dark-sweep">Gửi đánh giá</button>
                        </form>
                    }
                </div>
            }
            else
            {
                <p class="mt-3">Vui lòng <a href="@Url.Action("Index", "Login")">đăng nhập</a> để thêm đánh giá.</p>
            }
        </div>

        <!-- Related Products -->
        @if (Model.RelatedProducts.Any())
        {
            <div class="mt-5">
                <h4 class="fw-bold mb-4">Sản phẩm liên quan</h4>
                <div class="swiper related-products-swiper">
                    <div class="swiper-wrapper">
                        @foreach (var product in Model.RelatedProducts)
                        {
                            <div class="swiper-slide">
                                <div class="product-card border rounded-3 overflow-hidden bg-white" style="transition: box-shadow 0.3s ease; cursor: pointer;" onclick="window.location.href='@Url.Action("Index", "ProductDetails")?id=@product.Id'">
                                    <div class="card-img overflow-hidden" style="height: 20vh;">
                                        <img src="@(product.ProductImages.Any() ? product.ProductImages.First().ImageUrl : "~/images/placeholder.jpg")" alt="@product.Name" class="img-fluid w-100 h-100 object-fit-cover">
                                    </div>
                                    <div class="card-detail d-flex flex-column p-3">
                                        <h5 class="fs-6 fw-bold mb-2">@product.Name</h5>
                                        <span class="fw-bold">$@product.Price.ToString("N2")</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
        }
    </div>
</section>

@section Scripts {
    <!-- Swiper.js -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <script>
        // Initialize Swiper for Product Images
        const productSwiper = new Swiper('.product-image-swiper', {
            loop: true,
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
        });

        // Initialize Swiper for Related Products
        const relatedSwiper = new Swiper('.related-products-swiper', {
            loop: true,
            slidesPerView: 1,
            spaceBetween: 20,
            breakpoints: {
                576: { slidesPerView: 2 },
                768: { slidesPerView: 3 },
                992: { slidesPerView: 4 },
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
        });

        // Quantity Selection
        function updateQuantity(change) {
            const quantityInput = document.getElementById('quantity');
            let value = parseInt(quantityInput.value) + change;
            if (value < 1) value = 1;
            if (value > parseInt(quantityInput.max)) value = parseInt(quantityInput.max);
            quantityInput.value = value;
            document.getElementById('cart-quantity').value = value; // Update hidden input for cart
        }

        // Update size selection for cart
        document.getElementById('size').addEventListener('change', function () {
            document.getElementById('cart-size').value = this.value;
        });
    </script>
    <script src="js/jquery-1.11.0.min.js"></script>
    <script src="js/plugins.js"></script>
    <script src="js/script.js"></script>

    <!-- Star Rating Styling -->
    <style>
        /* Base styles for both star ratings */
        .star-rating {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }

            .star-rating input[type="radio"] {
                display: none;
            }

            .star-rating label {
                margin: 0 5px;
                cursor: pointer;
                color: #808080; /* Default gray for both forms */
            }

        /* Update Rating Form: Yellow (gold) for hover and selected */
        .update-rating-form .star-rating input:checked ~ label,
        .update-rating-form .star-rating label:hover,
        .update-rating-form .star-rating label:hover ~ label {
            color: #FFD700 !important; /* Gold for selected and hover */
        }

        /* Add Rating Form: Orange for hover and selected */
        .add-rating-form .star-rating label:hover,
        .add-rating-form .star-rating label:hover ~ label {
            color: #FFA500 !important; /* Orange for hover */
        }

        .add-rating-form .star-rating input:checked ~ label {
            color: #FFA500 !important; /* Orange for selected */
        }
    </style>
}