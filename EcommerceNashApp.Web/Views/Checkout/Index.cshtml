@using EcommerceNashApp.Web.Models.Views
@model CheckoutPageView
@{
    ViewData["Title"] = "Thanh Toán";
}

<section id="checkout" class="checkout-page py-5">
    <div class="container-md">
        <h1 class="display-6 text-center mb-5">Thanh Toán</h1>
        <div class="row">
            <!-- Checkout Stepper (Left) -->
            <div class="col-lg-3 col-md-12 mb-4">
                <div class="checkout-stepper bg-light p-4 rounded-3">
                    <ul class="list-unstyled">
                        <li class="step active d-flex align-items-center mb-3">
                            <span class="step-number rounded-circle bg-dark text-white d-flex align-items-center justify-content-center me-3" style="width: 30px; height: 30px;">1</span>
                            <span class="step-title fw-bold">Giỏ Hàng</span>
                        </li>
                        <li class="step d-flex align-items-center mb-3">
                            <span class="step-number rounded-circle bg-gray text-dark d-flex align-items-center justify-content-center me-3" style="width: 30px; height: 30px;">2</span>
                            <span class="step-title">Thanh Toán</span>
                        </li>
                        <li class="step d-flex align-items-center">
                            <span class="step-number rounded-circle bg-gray text-dark d-flex align-items-center justify-content-center me-3" style="width: 30px; height: 30px;">3</span>
                            <span class="step-title">Hoàn Tất</span>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Checkout Content (Right) -->
            <div class="col-lg-9 col-md-12">
                <div class="checkout-content bg-white p-4 rounded-3 border">
                    <div id="step-cart" class="step-content">
                        <h2 class="fs-4 mb-4">Giỏ Hàng</h2>
                        <div id="cartItems" class="cart-items">
                            @if (Model.Cart.CartItems.Any())
                            {
                                foreach (var item in Model.Cart.CartItems)
                                {
                                    <div class="cart-item d-flex border-bottom pb-4 mb-4" data-cart-item-key="@item.Id">
                                        <div class="col-lg-2 col-md-3 col-sm-2 me-4">
                                            <img src="@(item.Images[0].ImageUrl ?? "~/images/placeholder.jpg")" class="img-fluid rounded" alt="@item.ProductName">
                                        </div>
                                        <div class="col-lg-9 col-md-8 col-sm-8">
                                            <div class="d-flex justify-content-between align-items-center mb-3">
                                                <h3 class="fs-5 fw-bold">@item.ProductName</h3>
                                                <form asp-action="RemoveCartItem" asp-controller="Cart" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="cartItemId" value="@item.Id" />
                                                    <button type="submit" class="btn p-0" aria-label="Remove this item">
                                                        <svg class="close" width="20" height="20"><use xlink:href="#close"></use></svg>
                                                    </button>
                                                </form>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <form asp-action="UpdateCartItem" asp-controller="Cart" method="post" class="input-group product-qty" style="width: 150px;">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="cartItemId" value="@item.Id" />
                                                    <button type="submit" name="quantity" value="@(item.Quantity - 1)" class="quantity-left-minus btn btn-light rounded-0 rounded-start btn-number" @(item.Quantity <= 1 ? "disabled" : "")>
                                                        <svg width="16" height="16"><use xlink:href="#minus"></use></svg>
                                                    </button>
                                                    <input type="text" name="quantity-display" class="form-control input-number quantity text-center" value="@item.Quantity" readonly>
                                                    <button type="submit" name="quantity" value="@(item.Quantity + 1)" class="quantity-right-plus btn btn-light rounded-0 rounded-end btn-number">
                                                        <svg width="16" height="16"><use xlink:href="#plus"></use></svg>
                                                    </button>
                                                </form>
                                                <span class="fs-5 fw-bold">$@item.Price.ToString("F2")</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-center">Giỏ hàng trống.</p>
                            }
                        </div>
                        <div class="cart-total mt-4 pt-4 border-top">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fs-5">Tổng phụ:</span>
                                <span class="fs-5">$@Model.Subtotal.ToString("F2")</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fs-5">Phí giao hàng:</span>
                                <span class="fs-5">$@Model.DeliveryFee.ToString("F2")</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span class="fs-5 fw-bold">Tổng cộng:</span>
                                <span class="fs-5 fw-bold" id="cartTotal">$@Model.Total.ToString("F2")</span>
                            </div>
                            <div class="text-end">
                                <form asp-action="CreatePaymentIntent" asp-controller="Checkout" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-red btn-medium text-uppercase hvr-sweep-to-right">Tiến Hành Thanh Toán</button>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div id="step-payment" class="step-content d-none">
                        <h2 class="fs-4 mb-4">Thanh Toán</h2>
                        <div id="payment-form">
                            <div id="card-element" class="form-control mb-3"></div>
                            <div id="card-errors" class="text-danger mb-3" role="alert"></div>
                            <button id="submit-payment" class="btn btn-red btn-medium text-uppercase hvr-sweep-to-right">Thanh Toán</button>
                        </div>
                    </div>

                    <div id="step-complete" class="step-content d-none">
                        <h2 class="fs-4 mb-4">Hoàn Tất</h2>
                        <p class="text-success">Thanh toán thành công! Cảm ơn bạn đã mua sắm tại Nash.</p>
                        <a href="@Url.Action("Index", "Home")" class="btn btn-outline-gray btn-medium text-uppercase hvr-sweep-to-right">Quay Lại Trang Chủ</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        const stripe = Stripe('pk_test_your_publishable_key'); // Replace with your Stripe publishable key
        const elements = stripe.elements();
        const cardElement = elements.create('card');
        cardElement.mount('#card-element');

        document.addEventListener('DOMContentLoaded', () => {
            // Get CSRF token from cookie
            function getCsrfToken() {
                const cookies = document.cookie.split(';');
                for (let cookie of cookies) {
                    const [name, value] = cookie.trim().split('=');
                    if (name === 'csrf') return value;
                }
                return null;
            }

            // Update Stepper UI
            function updateStepper(step) {
                document.querySelectorAll('.step').forEach((el, index) => {
                    el.classList.remove('active');
                    if (index + 1 <= step) {
                        el.classList.add('active');
                        el.querySelector('.step-number').classList.remove('bg-gray', 'text-dark');
                        el.querySelector('.step-number').classList.add('bg-dark', 'text-white');
                    } else {
                        el.querySelector('.step-number').classList.add('bg-gray', 'text-dark');
                        el.querySelector('.step-number').classList.remove('bg-dark', 'text-white');
                    }
                });
                document.querySelectorAll('.step-content').forEach(el => el.classList.add('d-none'));
                document.getElementById(`step-${['cart', 'payment', 'complete'][step - 1]}`).classList.remove('d-none');
            }

            // Handle Payment Submission
            const paymentButton = document.getElementById('submit-payment');
            paymentButton.addEventListener('click', async () => {
                paymentButton.disabled = true;
                const { paymentIntent, error } = await stripe.confirmCardPayment('@Model.Cart.ClientSecret', {
                    payment_method: {
                        card: cardElement
                    }
                });

                if (error) {
                    document.getElementById('card-errors').textContent = error.message;
                    paymentButton.disabled = false;
                } else if (paymentIntent.status === 'succeeded') {
                    updateStepper(3);
                }
            });
        });
    </script>
}